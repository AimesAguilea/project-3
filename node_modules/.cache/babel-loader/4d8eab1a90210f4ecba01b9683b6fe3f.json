{"ast":null,"code":"var _jsxFileName = \"/Users/Vincecharals/Desktop/teacherhub/src/weather.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport ReactDOM from \"react-dom\";\nimport \"./weather.css\";\n\nfunction getLocation() {\n  return axios.get(\"https://ipapi.co/json/\");\n}\n\nfunction getWeather(location) {\n  let units = \"&units=metric\";\n  let appid = \"&APPID=e8656d00ae56fd09428db5cae581be02\";\n  return axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + location + units + appid);\n}\n\nexport default class Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"C\",\n      location: \"\",\n      weather: \"\",\n      temp: 0\n    };\n  }\n\n  componentDidMount() {\n    let _this = this;\n\n    getLocation().then(function (result) {\n      let loc = result.data.city + \", \" + result.data.country;\n      getWeather(loc).then(function (result) {\n        _this.setState({\n          location: loc,\n          weather: result.data.weather[0],\n          temp: result.data.main.temp\n        });\n      });\n    }).catch(_this.setState({\n      location: \"Cannot get location.\",\n      temp: null\n    }));\n  }\n\n  changeFormat(format) {\n    let temperature = 0;\n    let newFormat = \"\";\n\n    if (format === \"C\") {\n      temperature = (this.state.temp * (9 / 5) + 32).toFixed(0);\n      newFormat = \"F\";\n    } else {\n      temperature = ((this.state.temp - 32) * (5 / 9)).toFixed(0);\n      newFormat = \"C\";\n    }\n\n    this.setState({\n      format: newFormat,\n      temp: temperature\n    });\n  }\n\n  render() {\n    let hr = new Date().getHours();\n    let tod = hr >= 17 ? \"night\" : \"day\";\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Local Weather\"), React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.weather.main), React.createElement(\"i\", {\n      className: \"wi wi-owm-\" + tod + \"-\" + this.state.weather.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.state.temp && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.temp, \" \\xB0\", this.state.format), this.state.temp && {\n      /* <SwitchFormat\n      changeFormat={this.changeFormat.bind(this)}\n      format={this.state.format}\n      /> */\n    }));\n  }\n\n}\n\nclass SwitchFormat extends React.Component {\n  handleChange(e) {\n    this.props.changeFormat(e.target.value);\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      value: this.props.format,\n      onClick: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Change format\");\n  }\n\n}\n\nReactDOM.render(React.createElement(Weather, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}), document.getElementById(\"weather\"));","map":{"version":3,"sources":["/Users/Vincecharals/Desktop/teacherhub/src/weather.js"],"names":["React","axios","ReactDOM","getLocation","get","getWeather","location","units","appid","Weather","Component","constructor","props","state","format","weather","temp","componentDidMount","_this","then","result","loc","data","city","country","setState","main","catch","changeFormat","temperature","newFormat","toFixed","render","hr","Date","getHours","tod","id","SwitchFormat","handleChange","e","target","value","bind","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport ReactDOM from \"react-dom\";\nimport \"./weather.css\";\n\nfunction getLocation() {\n  return axios.get(\"https://ipapi.co/json/\");\n}\n\nfunction getWeather(location) {\n  let units = \"&units=metric\";\n  let appid = \"&APPID=e8656d00ae56fd09428db5cae581be02\";\n\n  return axios.get(\n    \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      location +\n      units +\n      appid\n  );\n}\n\nexport default class Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"C\",\n      location: \"\",\n      weather: \"\",\n      temp: 0\n    };\n  }\n\n  componentDidMount() {\n    let _this = this;\n\n    getLocation()\n      .then(function(result) {\n        let loc = result.data.city + \", \" + result.data.country;\n\n        getWeather(loc).then(function(result) {\n          _this.setState({\n            location: loc,\n            weather: result.data.weather[0],\n            temp: result.data.main.temp\n          });\n        });\n      })\n      .catch(\n        _this.setState({\n          location: \"Cannot get location.\",\n          temp: null\n        })\n      );\n  }\n\n  changeFormat(format) {\n    let temperature = 0;\n    let newFormat = \"\";\n\n    if (format === \"C\") {\n      temperature = (this.state.temp * (9 / 5) + 32).toFixed(0);\n      newFormat = \"F\";\n    } else {\n      temperature = ((this.state.temp - 32) * (5 / 9)).toFixed(0);\n      newFormat = \"C\";\n    }\n\n    this.setState({\n      format: newFormat,\n      temp: temperature\n    });\n  }\n\n  render() {\n    let hr = new Date().getHours();\n    let tod = hr >= 17 ? \"night\" : \"day\";\n\n    return (\n      <div className=\"container\">\n        <h1>Local Weather</h1>\n        <div className=\"location\">\n          <h2>{this.state.location}</h2>\n          <p>{this.state.weather.main}</p>\n          <i className={\"wi wi-owm-\" + tod + \"-\" + this.state.weather.id} />\n          {this.state.temp && (\n            <p>\n              {this.state.temp} &#176;{this.state.format}\n            </p>\n          )}\n          {this.state.temp &&\n            {\n              /* <SwitchFormat\n              changeFormat={this.changeFormat.bind(this)}\n              format={this.state.format}\n            /> */\n            }}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SwitchFormat extends React.Component {\n  handleChange(e) {\n    this.props.changeFormat(e.target.value);\n  }\n\n  render() {\n    return (\n      <button value={this.props.format} onClick={this.handleChange.bind(this)}>\n        Change format\n      </button>\n    );\n  }\n}\n\nReactDOM.render(<Weather />, document.getElementById(\"weather\"));\n"]},"metadata":{},"sourceType":"module"}