{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nimport ReactDOM from \"react-dom\";\nimport \"./weather.css\";\n\nfunction getLocation() {\n  return axios.get(\"https://ipapi.co/json/\");\n} // function getWeather(location) {\n//   let units = \"&units=metric\";\n//   let appid = \"&APPID=e8656d00ae56fd09428db5cae581be02\";\n//   return axios.get(\n//     \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n//       location +\n//       units +\n//       appid\n//   );\n// }\n// export default class Weather extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       format: \"C\",\n//       location: \"\",\n//       weather: \"\",\n//       temp: 0\n//     };\n//   }\n//   componentDidMount() {\n//     let _this = this;\n//     getLocation()\n//       .then(function(result) {\n//         let loc = result.data.city + \", \" + result.data.country;\n//         getWeather(loc).then(function(result) {\n//           _this.setState({\n//             location: loc,\n//             weather: result.data.weather[0],\n//             temp: result.data.main.temp\n//           });\n//         });\n//       })\n//       .catch(\n//         _this.setState({\n//           location: \"Cannot get location.\",\n//           temp: null\n//         })\n//       );\n//   }\n//   changeFormat(format) {\n//     let temperature = 0;\n//     let newFormat = \"\";\n//     if (format === \"C\") {\n//       temperature = (this.state.temp * (9 / 5) + 32).toFixed(0);\n//       newFormat = \"F\";\n//     } else {\n//       temperature = ((this.state.temp - 32) * (5 / 9)).toFixed(0);\n//       newFormat = \"C\";\n//     }\n//     this.setState({\n//       format: newFormat,\n//       temp: temperature\n//     });\n//   }\n//   render() {\n//     let hr = new Date().getHours();\n//     let tod = hr >= 17 ? \"night\" : \"day\";\n//     return (\n//       <div className=\"container\">\n//         <h1>Local Weather</h1>\n//         <div className=\"location\">\n//           <h2>{this.state.location}</h2>\n//           <p>{this.state.weather.main}</p>\n//           <i className={\"wi wi-owm-\" + tod + \"-\" + this.state.weather.id} />\n//           {this.state.temp && (\n//             <p>\n//               {this.state.temp} &#176;{this.state.format}\n//             </p>\n//           )}\n//           {this.state.temp && (\n//             <SwitchFormat\n//               changeFormat={this.changeFormat.bind(this)}\n//               format={this.state.format}\n//             />\n//           )}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// class SwitchFormat extends React.Component {\n//   handleChange(e) {\n//     this.props.changeFormat(e.target.value);\n//   }\n//   render() {\n//     return (\n//       <button value={this.props.format} onClick={this.handleChange.bind(this)}>\n//         Change format\n//       </button>\n//     );\n//   }\n// }\n// ReactDOM.render(<Weather />, document.getElementById(\"weather\"));","map":{"version":3,"sources":["/Users/Vincecharals/project-3/src/weather.js"],"names":["React","axios","ReactDOM","getLocation","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,eAAP;;AAEA,SAASC,WAAT,GAAuB;AACrB,SAAOF,KAAK,CAACG,GAAN,CAAU,wBAAV,CAAP;AACD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport ReactDOM from \"react-dom\";\nimport \"./weather.css\";\n\nfunction getLocation() {\n  return axios.get(\"https://ipapi.co/json/\");\n}\n\n// function getWeather(location) {\n//   let units = \"&units=metric\";\n//   let appid = \"&APPID=e8656d00ae56fd09428db5cae581be02\";\n\n//   return axios.get(\n//     \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n//       location +\n//       units +\n//       appid\n//   );\n// }\n\n// export default class Weather extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       format: \"C\",\n//       location: \"\",\n//       weather: \"\",\n//       temp: 0\n//     };\n//   }\n\n//   componentDidMount() {\n//     let _this = this;\n\n//     getLocation()\n//       .then(function(result) {\n//         let loc = result.data.city + \", \" + result.data.country;\n\n//         getWeather(loc).then(function(result) {\n//           _this.setState({\n//             location: loc,\n//             weather: result.data.weather[0],\n//             temp: result.data.main.temp\n//           });\n//         });\n//       })\n//       .catch(\n//         _this.setState({\n//           location: \"Cannot get location.\",\n//           temp: null\n//         })\n//       );\n//   }\n\n//   changeFormat(format) {\n//     let temperature = 0;\n//     let newFormat = \"\";\n\n//     if (format === \"C\") {\n//       temperature = (this.state.temp * (9 / 5) + 32).toFixed(0);\n//       newFormat = \"F\";\n//     } else {\n//       temperature = ((this.state.temp - 32) * (5 / 9)).toFixed(0);\n//       newFormat = \"C\";\n//     }\n\n//     this.setState({\n//       format: newFormat,\n//       temp: temperature\n//     });\n//   }\n\n//   render() {\n//     let hr = new Date().getHours();\n//     let tod = hr >= 17 ? \"night\" : \"day\";\n\n//     return (\n//       <div className=\"container\">\n//         <h1>Local Weather</h1>\n//         <div className=\"location\">\n//           <h2>{this.state.location}</h2>\n//           <p>{this.state.weather.main}</p>\n//           <i className={\"wi wi-owm-\" + tod + \"-\" + this.state.weather.id} />\n//           {this.state.temp && (\n//             <p>\n//               {this.state.temp} &#176;{this.state.format}\n//             </p>\n//           )}\n//           {this.state.temp && (\n//             <SwitchFormat\n//               changeFormat={this.changeFormat.bind(this)}\n//               format={this.state.format}\n//             />\n//           )}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class SwitchFormat extends React.Component {\n//   handleChange(e) {\n//     this.props.changeFormat(e.target.value);\n//   }\n\n//   render() {\n//     return (\n//       <button value={this.props.format} onClick={this.handleChange.bind(this)}>\n//         Change format\n//       </button>\n//     );\n//   }\n// }\n\n// ReactDOM.render(<Weather />, document.getElementById(\"weather\"));\n"]},"metadata":{},"sourceType":"module"}